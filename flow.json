[
    {
        "id": "989e2cdbd342cdd2",
        "type": "tab",
        "label": "Automatismo condizionatori",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df4e4ece660d7db1",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "20490fd6858c7918",
            "dfa9029831e7ac01",
            "aeb98c1fd3738dc0",
            "5ce1bf9d394feb5a",
            "25b155fa5de4a1e8",
            "b27201e1ae034d23",
            "b8d32f88fff07a82",
            "e168cd2ad5d8d367",
            "4a412f59cd86b3ad",
            "07f96cf9d40c6360",
            "17a4878f2d6318df",
            "58a34ae759b55fec",
            "3d7ce2957d9250e1"
        ],
        "x": 14,
        "y": 779,
        "w": 2032,
        "h": 222
    },
    {
        "id": "7af7096fb117a0c7",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7290a5cf5c3513d4",
            "fdcfdeb1deb6733f",
            "ca21431038b2e3db",
            "9b9d8830b553c111",
            "2c98fd1d4673540b",
            "147aee1aba9032bf",
            "5e9883c781df151a",
            "8cd0d8e7a3f3489a"
        ],
        "x": 24,
        "y": 599,
        "w": 1942,
        "h": 142
    },
    {
        "id": "480244b6441a763c",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a5a11f1c12e29837",
            "e3ede986592d29ce",
            "974c3cfcfad58e0b",
            "331790b7ddcd7238",
            "e6c104bfea1dee14",
            "62b0f34c779deb9a",
            "3bf78689f6664278",
            "d9c393d72a11fd4c",
            "5695c31836a3090e",
            "dd2468550fe1591d",
            "7a12725ee8a1e3b7",
            "7311df80bde9385c",
            "b3e61915e14d8761",
            "abce151ef44fd8fd",
            "274ea7fb334f785a",
            "cedadc2dca8d25f3",
            "66c686fbe1b5a9af"
        ],
        "x": 14,
        "y": 339,
        "w": 1572,
        "h": 242
    },
    {
        "id": "12f8095813f5216f",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c3fcf22baac5e533",
            "67a63509322f01ea",
            "30680d691d2eb11d",
            "de85421325d11c18",
            "8b1982dfb30d5f77",
            "61493c5aaf33708e",
            "7597175852f47849",
            "38437c73e55d228d",
            "5dd9a08b83909b00",
            "9f896a1c9fc6571c",
            "864fd1c038a0df90",
            "a5c1b52aa5a67036"
        ],
        "x": 14,
        "y": -1,
        "w": 1132,
        "h": 322
    },
    {
        "id": "7fd42b9fa2beb298",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "57d5f3112d36888d",
            "4095db61ae167142",
            "06b54a4a8e08c1f4",
            "a76614a601f4680f",
            "25b11e68eceaa8ea",
            "b668e4bdb4727838",
            "557fac3ee40b3028",
            "e0a9c91713b84bb8",
            "76d5ca1e90fff201"
        ],
        "x": 14,
        "y": 1359,
        "w": 1542,
        "h": 162
    },
    {
        "id": "1c0a4643e4679b37",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7c01cace5d3bc194",
            "1fade9bdfa62bacf",
            "e3d34516241f4a33",
            "662e24da2fa50031",
            "4c663b3a1a814b8e",
            "2fb1721b3687a4cd",
            "2aa1c98bb1cfc93c",
            "668326422c88d64f",
            "daf890c177b31057",
            "4d0ff38646acbf52",
            "648a6870975ffbfe",
            "b8cb78a982b6e820",
            "75f37df984960e4b",
            "67673b6004065643",
            "c82d3bc50110d6df",
            "4eb21f7bcc9792d1",
            "aa66d01175abe1c0",
            "82ccbe83b652c288",
            "c2a0d62bb2a01842",
            "100e558babe6851a",
            "5eecd7c5e69dcb30",
            "8215acc8b7a6e45d"
        ],
        "x": 14,
        "y": 2159,
        "w": 2132,
        "h": 309.5
    },
    {
        "id": "575d511a10b8c5f4",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef82790f5e062e92",
            "0bea4982f9429249",
            "3714079c96edf79e",
            "4de1b38ef07fe404",
            "568726a8157428eb",
            "d8bd91c43f6d0f9d",
            "d838868e35d1c0f0",
            "f49b1c66f4821bde",
            "c2e38281d0b89f23",
            "60ec870cf9971e5a",
            "8cd9099ab6dba889",
            "40b79fa60015efcc",
            "f722fc3642331334"
        ],
        "x": 14,
        "y": 1039,
        "w": 1552,
        "h": 282
    },
    {
        "id": "378f8796bead2733",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f736674224d0994d",
            "c72546d7a9c3163f",
            "7b3a0c9e1bf48227",
            "461361fdd920c1bc",
            "202bed74dadd3ed4",
            "217c4db7abae803a",
            "06aefc45c530609d",
            "d4ae3a895fa63e19",
            "96c872bba95a3417",
            "26bb0a9dbe44ff42",
            "6c20f412361df0a2",
            "fb98f5109918fa8d",
            "006663023dacb0be",
            "0f03df8004122a7a",
            "a8facd3badb40a43",
            "bba308d7ba2eefcd",
            "5ebb98c72130ff59",
            "dc3e4f49ef50f09f"
        ],
        "x": 14,
        "y": 1539,
        "w": 1982,
        "h": 262
    },
    {
        "id": "18b3f29c65d7d8f7",
        "type": "group",
        "z": "989e2cdbd342cdd2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a6bc03b1bab4f728",
            "688cfbb5d1ae4491",
            "4cd42bdcd07a5eb6",
            "d2c20b7746ffeef4",
            "c3e0ec96c4c5ce26",
            "f99392909801b004",
            "8d5387d68184b70e",
            "2b30e397b87b6118",
            "9f895bea6ac2631d",
            "fb1a5eecefe4de9e",
            "21b40785372782dd",
            "2fadd2fae08c42fb",
            "18dede60b2802b3d",
            "a2fc5bea6344ac3f",
            "7543d84fb7be7992",
            "168f96baa06365c2",
            "d516526fe91c7fb5",
            "841db295d5c5517d",
            "5da16b6f94a30cb5",
            "21c79530bb96208c",
            "b242d67481a5abc4",
            "d9ce1d9dea4c5b5a",
            "4030781f1a10e6b6"
        ],
        "x": 14,
        "y": 1819,
        "w": 1972,
        "h": 322
    },
    {
        "id": "a5a11f1c12e29837",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "Potenza Esportata soglia 1",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.potenza_esportata",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [],
        "customOutputs": [],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "d9c393d72a11fd4c"
            ],
            []
        ]
    },
    {
        "id": "20490fd6858c7918",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "avviso condizionatore Acceso",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Acceso condizionatore Matrimoniale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1890,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "b3e61915e14d8761",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "Accensione automatica condizionatori per autoconsumo solare e PDC spenta",
        "info": "",
        "x": 310,
        "y": 380,
        "wires": []
    },
    {
        "id": "57d5f3112d36888d",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "Potenza Prelevata > 200 W",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.potenza_prelevata",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [],
        "customOutputs": [],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 160,
        "y": 1460,
        "wires": [
            [
                "b668e4bdb4727838"
            ],
            []
        ]
    },
    {
        "id": "dfa9029831e7ac01",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "Condizionatore Matrimoniale Acceso",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_matrimoniale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 450,
        "y": 880,
        "wires": [
            [
                "b27201e1ae034d23"
            ],
            [
                "4a412f59cd86b3ad"
            ]
        ]
    },
    {
        "id": "e3ede986592d29ce",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "e6c104bfea1dee14"
            ]
        ]
    },
    {
        "id": "aeb98c1fd3738dc0",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "accensione Condizionatore Ale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "set_hvac_mode",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_ale"
        ],
        "data": "{\"hvac_mode\":\"heat\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "e168cd2ad5d8d367"
            ]
        ]
    },
    {
        "id": "5ce1bf9d394feb5a",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "accensione Condizionatore Matrimoniale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "set_hvac_mode",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_matrimoniale"
        ],
        "data": "{\"hvac_mode\":\"heat\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1100,
        "y": 880,
        "wires": [
            [
                "b8d32f88fff07a82"
            ]
        ]
    },
    {
        "id": "25b155fa5de4a1e8",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "avviso condizionatore Acceso",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Acceso condizionatore Ale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1810,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "b27201e1ae034d23",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "Condizionatore Ale Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_ale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 640,
        "y": 960,
        "wires": [
            [],
            [
                "07f96cf9d40c6360"
            ]
        ]
    },
    {
        "id": "4095db61ae167142",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "06b54a4a8e08c1f4"
            ]
        ]
    },
    {
        "id": "974c3cfcfad58e0b",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "Potenza Esportata soglia 2",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.potenza_esportata",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [],
        "customOutputs": [],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 150,
        "y": 520,
        "wires": [
            [
                "274ea7fb334f785a"
            ],
            []
        ]
    },
    {
        "id": "331790b7ddcd7238",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "62b0f34c779deb9a"
            ]
        ]
    },
    {
        "id": "7290a5cf5c3513d4",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "accensione Condizionatore Salotto",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "set_hvac_mode",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_salotto"
        ],
        "data": "{\"hvac_mode\":\"heat\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1100,
        "y": 700,
        "wires": [
            [
                "2c98fd1d4673540b"
            ]
        ]
    },
    {
        "id": "fdcfdeb1deb6733f",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "avviso condizionatore Acceso",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Acceso condizionatore Salotto 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1810,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "ca21431038b2e3db",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "Condizionatore Salotto Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_salotto",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 470,
        "y": 700,
        "wires": [
            [],
            [
                "9b9d8830b553c111"
            ]
        ]
    },
    {
        "id": "7c01cace5d3bc194",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "temperatura salotto > 23.7",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 3,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.netatmo_salotto_temperature",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": ">=",
                "comparatorValueDatatype": "str",
                "comparatorValue": "23.7"
            }
        ],
        "customOutputs": [
            {
                "messageType": "payload",
                "messageValue": "STOP",
                "messageValueType": "str",
                "comparatorPropertyType": "current_state",
                "comparatorPropertyValue": "new_state.state",
                "comparatorType": "<",
                "comparatorValue": "23.7",
                "comparatorValueDataType": "num"
            }
        ],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 150,
        "y": 2260,
        "wires": [
            [
                "1fade9bdfa62bacf"
            ],
            [],
            [
                "1fade9bdfa62bacf"
            ]
        ]
    },
    {
        "id": "1fade9bdfa62bacf",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 2260,
        "wires": [
            [
                "4eb21f7bcc9792d1"
            ]
        ]
    },
    {
        "id": "e3d34516241f4a33",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Condizionatore Salotto Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_salotto",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1230,
        "y": 2260,
        "wires": [
            [
                "662e24da2fa50031"
            ],
            []
        ]
    },
    {
        "id": "662e24da2fa50031",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Spegnimento Condizionatore Salotto",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_salotto"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1550,
        "y": 2260,
        "wires": [
            [
                "4c663b3a1a814b8e"
            ]
        ]
    },
    {
        "id": "4c663b3a1a814b8e",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Salotto per temperatura oltre i 24🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1860,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "2fb1721b3687a4cd",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "temperatura Cam Ale > 23.8",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 3,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.aqaracameraale_temperature",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": ">=",
                "comparatorValueDatatype": "str",
                "comparatorValue": "23.8"
            }
        ],
        "customOutputs": [
            {
                "messageType": "payload",
                "messageValue": "STOP",
                "messageValueType": "str",
                "comparatorPropertyType": "current_state",
                "comparatorPropertyValue": "new_state.state",
                "comparatorType": "<",
                "comparatorValue": "23.8",
                "comparatorValueDataType": "num"
            }
        ],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 160,
        "y": 2340,
        "wires": [
            [
                "2aa1c98bb1cfc93c"
            ],
            [],
            [
                "2aa1c98bb1cfc93c"
            ]
        ]
    },
    {
        "id": "2aa1c98bb1cfc93c",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 2340,
        "wires": [
            [
                "aa66d01175abe1c0"
            ]
        ]
    },
    {
        "id": "668326422c88d64f",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Condizionatore Ale Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_ale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1220,
        "y": 2340,
        "wires": [
            [
                "daf890c177b31057"
            ],
            []
        ]
    },
    {
        "id": "daf890c177b31057",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "spegnimento Condizionatore Ale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_ale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1510,
        "y": 2340,
        "wires": [
            [
                "4d0ff38646acbf52"
            ]
        ]
    },
    {
        "id": "4d0ff38646acbf52",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Ale per temperatura oltre i 24 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1800,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "648a6870975ffbfe",
        "type": "trigger-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "temperatura Cam Matrimoniale > 23.8",
        "server": "260765119bb2ca8e",
        "version": 4,
        "inputs": 0,
        "outputs": 3,
        "exposeAsEntityConfig": "",
        "entityId": "sensor.netatmo_camera_temperature",
        "entityIdType": "exact",
        "debugEnabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": ">=",
                "comparatorValueDatatype": "str",
                "comparatorValue": "23.8"
            }
        ],
        "customOutputs": [
            {
                "messageType": "payload",
                "messageValue": "STOP",
                "messageValueType": "str",
                "comparatorPropertyType": "current_state",
                "comparatorPropertyValue": "new_state.state",
                "comparatorType": "<",
                "comparatorValue": "23.8",
                "comparatorValueDataType": "num"
            }
        ],
        "outputInitially": true,
        "stateType": "str",
        "enableInput": false,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "x": 190,
        "y": 2420,
        "wires": [
            [
                "b8cb78a982b6e820"
            ],
            [],
            [
                "b8cb78a982b6e820"
            ]
        ]
    },
    {
        "id": "b8cb78a982b6e820",
        "type": "trigger",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 450,
        "y": 2420,
        "wires": [
            [
                "82ccbe83b652c288"
            ]
        ]
    },
    {
        "id": "75f37df984960e4b",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Condizionatore Matrimoniale Acceso",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "heat",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_matrimoniale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1310,
        "y": 2420,
        "wires": [
            [
                "67673b6004065643"
            ],
            []
        ]
    },
    {
        "id": "67673b6004065643",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "spegnimento Condizionatore Matrimoniale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_matrimoniale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1660,
        "y": 2420,
        "wires": [
            [
                "c82d3bc50110d6df"
            ]
        ]
    },
    {
        "id": "c82d3bc50110d6df",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Matrimoniale per temperatura oltre i 24🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 2000,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "9b9d8830b553c111",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "T salotto < 23.4?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "23.4",
        "halt_if_type": "num",
        "halt_if_compare": "lte",
        "entity_id": "sensor.aqarasalotto_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 750,
        "y": 700,
        "wires": [
            [
                "7290a5cf5c3513d4"
            ],
            []
        ]
    },
    {
        "id": "e6c104bfea1dee14",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1040,
        "y": 440,
        "wires": [
            [
                "5695c31836a3090e"
            ],
            []
        ]
    },
    {
        "id": "62b0f34c779deb9a",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "7a12725ee8a1e3b7"
            ],
            []
        ]
    },
    {
        "id": "06b54a4a8e08c1f4",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "557fac3ee40b3028"
            ],
            []
        ]
    },
    {
        "id": "4eb21f7bcc9792d1",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 600,
        "y": 2260,
        "wires": [
            [
                "100e558babe6851a"
            ],
            []
        ]
    },
    {
        "id": "aa66d01175abe1c0",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 600,
        "y": 2340,
        "wires": [
            [
                "5eecd7c5e69dcb30"
            ],
            []
        ]
    },
    {
        "id": "82ccbe83b652c288",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_autoconsumo_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 660,
        "y": 2420,
        "wires": [
            [
                "8215acc8b7a6e45d"
            ],
            []
        ]
    },
    {
        "id": "2c98fd1d4673540b",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "registra il dato onAutomazioneSalotto",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneSalotto",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "primaSogliaOk",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "riscaldamento",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 700,
        "wires": [
            [
                "fdcfdeb1deb6733f"
            ]
        ]
    },
    {
        "id": "b8d32f88fff07a82",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "registra il dato onAutomazioneMatrimoniale",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneMatrimoniale",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 880,
        "wires": [
            [
                "20490fd6858c7918"
            ]
        ]
    },
    {
        "id": "e168cd2ad5d8d367",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "registra il dato onAutomazioneAle",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneAle",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 960,
        "wires": [
            [
                "25b155fa5de4a1e8"
            ]
        ]
    },
    {
        "id": "c3fcf22baac5e533",
        "type": "poll-state",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Leggi prima soglia",
        "server": "260765119bb2ca8e",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputInitially": true,
        "outputOnChanged": true,
        "entityId": "input_number.primo_valore_immissione",
        "stateType": "num",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputs": 1,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 100,
        "wires": [
            [
                "67a63509322f01ea"
            ]
        ]
    },
    {
        "id": "67a63509322f01ea",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "primaSoglia",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "30680d691d2eb11d"
            ]
        ]
    },
    {
        "id": "30680d691d2eb11d",
        "type": "debug",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Visualizza valore letto",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "de85421325d11c18",
        "type": "poll-state",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Leggi seconda soglia",
        "server": "260765119bb2ca8e",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputInitially": true,
        "outputOnChanged": true,
        "entityId": "input_number.secondo_valore_immissione",
        "stateType": "num",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputs": 1,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 160,
        "wires": [
            [
                "8b1982dfb30d5f77"
            ]
        ]
    },
    {
        "id": "8b1982dfb30d5f77",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "secondaSoglia",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "30680d691d2eb11d"
            ]
        ]
    },
    {
        "id": "61493c5aaf33708e",
        "type": "poll-state",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Leggi soglia prelievi",
        "server": "260765119bb2ca8e",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputInitially": true,
        "outputOnChanged": true,
        "entityId": "input_number.soglia_prelievo",
        "stateType": "num",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputs": 1,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "7597175852f47849"
            ]
        ]
    },
    {
        "id": "7597175852f47849",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "sogliaPrelievi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "30680d691d2eb11d"
            ]
        ]
    },
    {
        "id": "38437c73e55d228d",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Lettura valori soglie da input number di HA",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "c2a0d62bb2a01842",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Spegnimento a temperatura stanza troppo alta in riscaldamento",
        "info": "",
        "x": 270,
        "y": 2200,
        "wires": []
    },
    {
        "id": "4a412f59cd86b3ad",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "T camera < 23",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "23",
        "halt_if_type": "num",
        "halt_if_compare": "lt",
        "entity_id": "sensor.aqaracameramatrimoniale_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 780,
        "y": 880,
        "wires": [
            [
                "5ce1bf9d394feb5a"
            ],
            [
                "b27201e1ae034d23"
            ]
        ]
    },
    {
        "id": "07f96cf9d40c6360",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "T camera < 23",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "23",
        "halt_if_type": "num",
        "halt_if_compare": "lt",
        "entity_id": "sensor.aqaracameraale_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 900,
        "y": 960,
        "wires": [
            [
                "aeb98c1fd3738dc0"
            ],
            []
        ]
    },
    {
        "id": "3bf78689f6664278",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "Confronta Dati",
        "func": "var soglia = flow.get(\"primaSoglia\");\nvar potenzaEsportata = flow.get(\"potenzaEsportata1\");\n\nif (potenzaEsportata >= soglia){\n    msg.payload = \"on\";\n}else{\n    msg.payload = \"STOP\";\n}\n\nif(msg.payload != \"STOP\"){\n   node.status({ fill: 'green', shape: 'dot', text: msg.payload});\n\n}else{\n    node.status({ fill: 'red', shape: 'ring', text: msg.payload});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 440,
        "wires": [
            [
                "e3ede986592d29ce"
            ]
        ]
    },
    {
        "id": "d9c393d72a11fd4c",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "potenzaEsportata1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "3bf78689f6664278"
            ]
        ]
    },
    {
        "id": "17a4878f2d6318df",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "PDC spenta?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "Winter, unavailable",
        "halt_if_type": "str",
        "halt_if_compare": "does_not_include",
        "entity_id": "sensor.ariston_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "dfa9029831e7ac01"
            ],
            []
        ]
    },
    {
        "id": "147aee1aba9032bf",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "PDC spenta?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "Winter, unavailable",
        "halt_if_type": "str",
        "halt_if_compare": "does_not_include",
        "entity_id": "sensor.ariston_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 210,
        "y": 700,
        "wires": [
            [
                "ca21431038b2e3db"
            ],
            []
        ]
    },
    {
        "id": "5dd9a08b83909b00",
        "type": "inject",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "9f896a1c9fc6571c"
            ]
        ]
    },
    {
        "id": "9f896a1c9fc6571c",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "Recupera meteo",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "weather",
        "service": "get_forecasts",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "weather.meteoradar_weather"
        ],
        "data": "{\"type\":\"daily\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "results"
            }
        ],
        "queue": "all",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "864fd1c038a0df90"
            ]
        ]
    },
    {
        "id": "864fd1c038a0df90",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "scegli tipo di automatismo in base al meteo",
        "func": "var tMaxPrevista = msg.payload[\"weather.meteoradar_weather\"].forecast[0].temperature;\n\n\nif (tMaxPrevista < 23){\n    msg.payload = \"riscaldamento\";\n} else  if (tMaxPrevista > 30){\n    msg.payload = \"raffrescamento\";\n} else {\n    msg.payload = \"nessuno\";\n}\nif(msg.payload != \"nessuno\"){\n   node.status({ fill: 'green', shape: 'dot', text: msg.payload});\n\n}else{\n    node.status({ fill: 'yellow', shape: 'dot', text: msg.payload});\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 280,
        "wires": [
            [
                "a5c1b52aa5a67036"
            ]
        ]
    },
    {
        "id": "a5c1b52aa5a67036",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "12f8095813f5216f",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "tipoAutomazione",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "30680d691d2eb11d"
            ]
        ]
    },
    {
        "id": "100e558babe6851a",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Acceso con automazione riscaldamento?",
        "property": "tipoAutomazione",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "riscaldamento",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "nulla",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 2260,
        "wires": [
            [
                "e3d34516241f4a33"
            ],
            []
        ]
    },
    {
        "id": "5eecd7c5e69dcb30",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Acceso con automazione riscaldamento?",
        "property": "tipoAutomazione",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "riscaldamento",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "nulla",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 2340,
        "wires": [
            [
                "668326422c88d64f"
            ],
            []
        ]
    },
    {
        "id": "8215acc8b7a6e45d",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "1c0a4643e4679b37",
        "name": "Acceso con automazione riscaldamento?",
        "property": "tipoAutomazione",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "riscaldamento",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "nulla",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 2420,
        "wires": [
            [
                "75f37df984960e4b"
            ],
            []
        ]
    },
    {
        "id": "5695c31836a3090e",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "riscaldamento o raffrescamento",
        "property": "tipoAutomazione",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "riscaldamento",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "raffrescamento",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 440,
        "wires": [
            [
                "dd2468550fe1591d"
            ],
            [
                "cedadc2dca8d25f3"
            ]
        ]
    },
    {
        "id": "dd2468550fe1591d",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "vai a riscaldamento soglia 1",
        "mode": "link",
        "links": [
            "5e9883c781df151a"
        ],
        "x": 1545,
        "y": 420,
        "wires": []
    },
    {
        "id": "58a34ae759b55fec",
        "type": "link in",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "start riscaldamento soglia 2",
        "links": [
            "7311df80bde9385c"
        ],
        "x": 55,
        "y": 880,
        "wires": [
            [
                "17a4878f2d6318df"
            ]
        ]
    },
    {
        "id": "7a12725ee8a1e3b7",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "riscaldamento o raffrescamento",
        "property": "tipoAutomazione",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "riscaldamento",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "raffrescamento",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 520,
        "wires": [
            [
                "7311df80bde9385c"
            ],
            [
                "66c686fbe1b5a9af"
            ]
        ]
    },
    {
        "id": "7311df80bde9385c",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "vai a riscaldamento soglia 2",
        "mode": "link",
        "links": [
            "58a34ae759b55fec"
        ],
        "x": 1545,
        "y": 500,
        "wires": []
    },
    {
        "id": "5e9883c781df151a",
        "type": "link in",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "start riscaldamento soglia 1",
        "links": [
            "dd2468550fe1591d"
        ],
        "x": 65,
        "y": 700,
        "wires": [
            [
                "147aee1aba9032bf"
            ]
        ]
    },
    {
        "id": "3d7ce2957d9250e1",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "df4e4ece660d7db1",
        "name": "Riscaldamento soglia 2",
        "info": "",
        "x": 140,
        "y": 820,
        "wires": []
    },
    {
        "id": "8cd0d8e7a3f3489a",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "7af7096fb117a0c7",
        "name": "Riscaldamento soglia 1",
        "info": "",
        "x": 160,
        "y": 640,
        "wires": []
    },
    {
        "id": "a76614a601f4680f",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "Spegnimento",
        "info": "",
        "x": 110,
        "y": 1400,
        "wires": []
    },
    {
        "id": "abce151ef44fd8fd",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "Confronta Dati",
        "func": "var soglia = flow.get(\"secondaSoglia\");\nvar potenzaEsportata = flow.get(\"potenzaEsportata2\");\nvar primaSogliaOk = flow.get(\"primaSogliaOk\");\n\nif(primaSogliaOk){\n    if (potenzaEsportata >= soglia){\n        msg.payload = \"on\";\n    }else{\n        msg.payload = \"STOP\";\n    } \n}else{\n    msg.payload = \"STOP\";\n}\n\nif(msg.payload != \"STOP\"){\n   node.status({ fill: 'green', shape: 'dot', text: msg.payload});\n\n}else{\n    node.status({ fill: 'red', shape: 'ring', text: msg.payload});\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 520,
        "wires": [
            [
                "331790b7ddcd7238"
            ]
        ]
    },
    {
        "id": "274ea7fb334f785a",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "potenzaEsportata2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "abce151ef44fd8fd"
            ]
        ]
    },
    {
        "id": "cedadc2dca8d25f3",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "link out 2",
        "mode": "link",
        "links": [],
        "x": 1545,
        "y": 460,
        "wires": []
    },
    {
        "id": "66c686fbe1b5a9af",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "480244b6441a763c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "40b79fa60015efcc"
        ],
        "x": 1545,
        "y": 540,
        "wires": []
    },
    {
        "id": "ef82790f5e062e92",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "avviso condizionatore Acceso",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"❄️ Acceso condizionatore Studio ❄️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1410,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "0bea4982f9429249",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "Condizionatori spenti?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.stato_condizionatori",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "60ec870cf9971e5a"
            ],
            [
                "3714079c96edf79e"
            ]
        ]
    },
    {
        "id": "3714079c96edf79e",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "Condizionatore Studio Acceso",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "cool",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_studio",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 530,
        "y": 1200,
        "wires": [
            [
                "d838868e35d1c0f0"
            ],
            []
        ]
    },
    {
        "id": "4de1b38ef07fe404",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "accensione Condizionatore Matrimoniale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "set_hvac_mode",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_matrimoniale"
        ],
        "data": "{\"hvac_mode\": \"cool\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 560,
        "y": 1280,
        "wires": [
            [
                "c2e38281d0b89f23"
            ]
        ]
    },
    {
        "id": "568726a8157428eb",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "accensione Condizionatore Studio",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "set_hvac_mode",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_studio"
        ],
        "data": "{\"hvac_mode\":\"cool\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 740,
        "y": 1140,
        "wires": [
            [
                "f49b1c66f4821bde"
            ]
        ]
    },
    {
        "id": "d8bd91c43f6d0f9d",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "avviso condizionatore Acceso",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"❄️ Acceso condizionatore Matrimoniale ❄️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1290,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "d838868e35d1c0f0",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "Condizionatore Matrimoniale Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "cool",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.condizionatore_matrimoniale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 850,
        "y": 1200,
        "wires": [
            [],
            [
                "8cd9099ab6dba889"
            ]
        ]
    },
    {
        "id": "f49b1c66f4821bde",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "registra il dato onAutomazioneStudio",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneStudio",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1140,
        "wires": [
            [
                "ef82790f5e062e92"
            ]
        ]
    },
    {
        "id": "c2e38281d0b89f23",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "registra il dato onAutomazioneMatrimoniale",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneMatrimoniale",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "primaSogliaOk",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "riscaldamento",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1280,
        "wires": [
            [
                "d8bd91c43f6d0f9d"
            ]
        ]
    },
    {
        "id": "60ec870cf9971e5a",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "T studio > 25",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "25",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "entity_id": "sensor.aqarastudio_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 470,
        "y": 1140,
        "wires": [
            [
                "568726a8157428eb"
            ],
            [
                "d838868e35d1c0f0"
            ]
        ]
    },
    {
        "id": "8cd9099ab6dba889",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "T camera > 25",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "25",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "entity_id": "sensor.aqaracameraale_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1120,
        "y": 1200,
        "wires": [
            [
                "4de1b38ef07fe404"
            ],
            []
        ]
    },
    {
        "id": "40b79fa60015efcc",
        "type": "link in",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "start raffrescamento soglia 1",
        "links": [
            "66c686fbe1b5a9af"
        ],
        "x": 55,
        "y": 1140,
        "wires": [
            [
                "0bea4982f9429249"
            ]
        ]
    },
    {
        "id": "f722fc3642331334",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "575d511a10b8c5f4",
        "name": "Raffrescamento soglia 1",
        "info": "",
        "x": 150,
        "y": 1080,
        "wires": []
    },
    {
        "id": "25b11e68eceaa8ea",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "Confronta Dati",
        "func": "var soglia = flow.get(\"sogliaPrelievi\");\nvar potenzaPrelevata = flow.get(\"potenzaPrelevata\");\n\nif (potenzaPrelevata >= soglia){\n    msg.payload = \"on\";\n}else{\n    msg.payload = \"STOP\";\n}\n\nif(msg.payload != \"STOP\"){\n   node.status({ fill: 'green', shape: 'dot', text: msg.payload});\n\n}else{\n    node.status({ fill: 'red', shape: 'ring', text: msg.payload});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1460,
        "wires": [
            [
                "4095db61ae167142"
            ]
        ]
    },
    {
        "id": "b668e4bdb4727838",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "potenzaPrelevata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1460,
        "wires": [
            [
                "25b11e68eceaa8ea"
            ]
        ]
    },
    {
        "id": "557fac3ee40b3028",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "in riscaldamento?",
        "property": "riscaldamento",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1460,
        "wires": [
            [
                "e0a9c91713b84bb8"
            ],
            [
                "76d5ca1e90fff201"
            ]
        ]
    },
    {
        "id": "e0a9c91713b84bb8",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "vai a spegnimento riscaldamento",
        "mode": "link",
        "links": [
            "f736674224d0994d"
        ],
        "x": 1515,
        "y": 1440,
        "wires": []
    },
    {
        "id": "76d5ca1e90fff201",
        "type": "link out",
        "z": "989e2cdbd342cdd2",
        "g": "7fd42b9fa2beb298",
        "name": "vai a spegnimento raffrescamento prelievi",
        "mode": "link",
        "links": [
            "a6bc03b1bab4f728"
        ],
        "x": 1515,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f736674224d0994d",
        "type": "link in",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "start spegnimento riscaldamento",
        "links": [
            "e0a9c91713b84bb8"
        ],
        "x": 55,
        "y": 1640,
        "wires": [
            [
                "c72546d7a9c3163f"
            ]
        ]
    },
    {
        "id": "c72546d7a9c3163f",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Condizionatore Ale Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_ale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 250,
        "y": 1640,
        "wires": [
            [
                "217c4db7abae803a"
            ],
            [
                "06aefc45c530609d"
            ]
        ]
    },
    {
        "id": "7b3a0c9e1bf48227",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "spegnimento Condizionatore Ale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_ale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 880,
        "y": 1640,
        "wires": [
            [
                "461361fdd920c1bc"
            ]
        ]
    },
    {
        "id": "461361fdd920c1bc",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Ale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1190,
        "y": 1640,
        "wires": [
            [
                "202bed74dadd3ed4"
            ]
        ]
    },
    {
        "id": "202bed74dadd3ed4",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "registra il dato offAutomazioneAle",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneAle",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "217c4db7abae803a",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneAle",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1640,
        "wires": [
            [
                "7b3a0c9e1bf48227"
            ],
            []
        ]
    },
    {
        "id": "06aefc45c530609d",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Condizionatore Matrimoniale Acceso",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_matrimoniale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 1700,
        "wires": [
            [
                "6c20f412361df0a2"
            ],
            [
                "fb98f5109918fa8d"
            ]
        ]
    },
    {
        "id": "d4ae3a895fa63e19",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "spegnimento Condizionatore Matrimoniale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_matrimoniale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 930,
        "y": 1700,
        "wires": [
            [
                "96c872bba95a3417"
            ]
        ]
    },
    {
        "id": "96c872bba95a3417",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Matrimoniale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1270,
        "y": 1700,
        "wires": [
            [
                "26bb0a9dbe44ff42"
            ]
        ]
    },
    {
        "id": "26bb0a9dbe44ff42",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "registra il dato offAutomazioneMatrimoniale",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneMatrimoniale",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "6c20f412361df0a2",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneMatrimoniale",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1700,
        "wires": [
            [
                "d4ae3a895fa63e19"
            ],
            []
        ]
    },
    {
        "id": "fb98f5109918fa8d",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Condizionatore Salotto Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_salotto",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 1760,
        "wires": [
            [
                "a8facd3badb40a43"
            ],
            []
        ]
    },
    {
        "id": "006663023dacb0be",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Spegnimento Condizionatore Salotto",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_salotto"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 920,
        "y": 1760,
        "wires": [
            [
                "0f03df8004122a7a"
            ]
        ]
    },
    {
        "id": "0f03df8004122a7a",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Salotto 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1270,
        "y": 1760,
        "wires": [
            [
                "bba308d7ba2eefcd"
            ]
        ]
    },
    {
        "id": "a8facd3badb40a43",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneSalotto",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "006663023dacb0be"
            ],
            []
        ]
    },
    {
        "id": "bba308d7ba2eefcd",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "registra il dato offAutomazioneSalotto",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneSalotto",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 1760,
        "wires": [
            [
                "5ebb98c72130ff59"
            ]
        ]
    },
    {
        "id": "5ebb98c72130ff59",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Resetta Soglia1",
        "func": "var soglia1 = flow.get(\"primaSogliaOk\");\nvar riscaldamento = flow.get(\"riscaldamento\");\n\nif(soglia1 && riscaldamento){\n    flow.set(\"primaSogliaOk\", false);\n    node.status({ fill: 'green', shape: 'dot', text: \"soglia1: false\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "dc3e4f49ef50f09f",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "378f8796bead2733",
        "name": "Spegnimento riscaldamento per prelievi",
        "info": "",
        "x": 200,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a6bc03b1bab4f728",
        "type": "link in",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "start spegnimento raffrescamento prelievi",
        "links": [
            "76d5ca1e90fff201"
        ],
        "x": 55,
        "y": 1920,
        "wires": [
            [
                "688cfbb5d1ae4491"
            ]
        ]
    },
    {
        "id": "688cfbb5d1ae4491",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Condizionatore Ale Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_ale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 250,
        "y": 1920,
        "wires": [
            [
                "f99392909801b004"
            ],
            [
                "8d5387d68184b70e"
            ]
        ]
    },
    {
        "id": "4cd42bdcd07a5eb6",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "spegnimento Condizionatore Ale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_ale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 880,
        "y": 1920,
        "wires": [
            [
                "d2c20b7746ffeef4"
            ]
        ]
    },
    {
        "id": "d2c20b7746ffeef4",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Ale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1190,
        "y": 1920,
        "wires": [
            [
                "c3e0ec96c4c5ce26"
            ]
        ]
    },
    {
        "id": "c3e0ec96c4c5ce26",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "registra il dato offAutomazioneAle",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneAle",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "f99392909801b004",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneAle",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1920,
        "wires": [
            [
                "4cd42bdcd07a5eb6"
            ],
            []
        ]
    },
    {
        "id": "8d5387d68184b70e",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Condizionatore Matrimoniale Acceso",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_matrimoniale",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 1980,
        "wires": [
            [
                "21b40785372782dd"
            ],
            [
                "2fadd2fae08c42fb"
            ]
        ]
    },
    {
        "id": "2b30e397b87b6118",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "spegnimento Condizionatore Matrimoniale",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_matrimoniale"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 930,
        "y": 1980,
        "wires": [
            [
                "9f895bea6ac2631d"
            ]
        ]
    },
    {
        "id": "9f895bea6ac2631d",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Matrimoniale 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1270,
        "y": 1980,
        "wires": [
            [
                "fb1a5eecefe4de9e"
            ]
        ]
    },
    {
        "id": "fb1a5eecefe4de9e",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "registra il dato offAutomazioneMatrimoniale",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneMatrimoniale",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "21b40785372782dd",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneMatrimoniale",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1980,
        "wires": [
            [
                "2b30e397b87b6118"
            ],
            []
        ]
    },
    {
        "id": "2fadd2fae08c42fb",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Condizionatore Salotto Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_salotto",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 2040,
        "wires": [
            [
                "7543d84fb7be7992"
            ],
            [
                "5da16b6f94a30cb5"
            ]
        ]
    },
    {
        "id": "18dede60b2802b3d",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Spegnimento Condizionatore Salotto",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_salotto"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 920,
        "y": 2040,
        "wires": [
            [
                "a2fc5bea6344ac3f"
            ]
        ]
    },
    {
        "id": "a2fc5bea6344ac3f",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ Spento condizionatore Salotto 🌡️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1270,
        "y": 2040,
        "wires": [
            [
                "168f96baa06365c2"
            ]
        ]
    },
    {
        "id": "7543d84fb7be7992",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneSalotto",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "18dede60b2802b3d"
            ],
            []
        ]
    },
    {
        "id": "168f96baa06365c2",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "registra il dato offAutomazioneSalotto",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneSalotto",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "d516526fe91c7fb5",
        "type": "function",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Resetta Soglia1",
        "func": "var soglia1 = flow.get(\"primaSogliaOk\");\nvar riscaldamento = flow.get(\"riscaldamento\");\n\nif(soglia1 && !riscaldamento){\n    flow.set(\"primaSogliaOk\", false);\n    node.status({ fill: 'green', shape: 'dot', text: \"soglia1: false\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "841db295d5c5517d",
        "type": "comment",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Spegnimento raffrescamento per prelievi",
        "info": "",
        "x": 210,
        "y": 1860,
        "wires": []
    },
    {
        "id": "5da16b6f94a30cb5",
        "type": "api-current-state",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Condizionatore Studio Acceso?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "climate.condizionatore_studio",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 250,
        "y": 2100,
        "wires": [
            [
                "4030781f1a10e6b6"
            ],
            []
        ]
    },
    {
        "id": "21c79530bb96208c",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "spegnimento Condizionatore Studio",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "climate",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.condizionatore_studio"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 900,
        "y": 2100,
        "wires": [
            [
                "b242d67481a5abc4"
            ]
        ]
    },
    {
        "id": "b242d67481a5abc4",
        "type": "api-call-service",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "avviso condizionatore Spento",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"❄️ Spento condizionatore Studio ❄️\",\"title\":\"Autoconsumo Condizionatori:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1260,
        "y": 2100,
        "wires": [
            [
                "d9ce1d9dea4c5b5a"
            ]
        ]
    },
    {
        "id": "d9ce1d9dea4c5b5a",
        "type": "change",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "registra il dato offAutomazioneStudio",
        "rules": [
            {
                "t": "set",
                "p": "onAutomazioneStudio",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2100,
        "wires": [
            [
                "d516526fe91c7fb5"
            ]
        ]
    },
    {
        "id": "4030781f1a10e6b6",
        "type": "switch",
        "z": "989e2cdbd342cdd2",
        "g": "18b3f29c65d7d8f7",
        "name": "Acceso con automazione?",
        "property": "onAutomazioneStudio",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 2100,
        "wires": [
            [
                "21c79530bb96208c"
            ],
            []
        ]
    },
    {
        "id": "260765119bb2ca8e",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    }
]
